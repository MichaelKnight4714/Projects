t9 <- ids[-i9]
v9 <- ids[i9]
t10 <- ids[-i10]
v10 <- ids[i10]
train1 <- train.white[t1,] # first training data set
val1 <- train.white[v1,] # first validation/test data set
train2 <- train.white[t2,] # second training data set
val2 <- train.white[v2,] # second validation/test data set
train3 <- train.white[t3,] # third training data set
val3 <- train.white[v3,] # third validation/test data set
train4 <- train.white[t4,] # fourth training data set
val4 <- train.white[v4,] # fourth validation/test data set
train5 <- train.white[t5,] # fifth training data set
val5 <- train.white[v5,] # fifth validation/test data set
train6 <- train.white[t6,] # sixth training data set
val6 <- train.white[v6,] # sixth validation/test data set
train7 <- train.white[t7,] # seventh training data set
val7 <- train.white[v7,] # seventh validation/test data set
train8 <- train.white[t8,] # eighth training data set
val8 <- train.white[v8,] # eighth validation/test data set
train9 <- train.white[t9,] # ninth training data set
val9 <- train.white[v9,] # ninth validation/test data set
train10 <- train.white[t10,] # tenth training data set
val10 <- train.white[v10,] # tenth validation/test data set
nrow(val1)
val1
# 10-fold cross validation
set.seed(1200)
k <- 10
n <- dim(train.white)[1] # train.white is my complete cases data
ids <- sample(1:n,n)
i1 <- (0*(n/k)+1):(1*(n/k))
i2 <- ((n/k)+1):(2*(n/k))
i3 <- (2*(n/k)+1):(3*(n/k))
i4 <- (3*(n/k)+1):(4*(n/k))
i5 <- (4*(n/k)+1):(5*(n/k))
i6 <- (5*(n/k)+1):(6*(n/k))
i7 <- (6*(n/k)+1):(7*(n/k))
i8 <- (7*(n/k)+1):(8*(n/k))
i9 <- (8*(n/k)+1):(9*(n/k))
i10 <- (9*(n/k)+1):(10*(n/k))
v1 <- ids[i1]  # individuals selected for first validation data set
t1 <- ids[-i1] # individuals in the first training data set
t2 <- ids[-i2]
v2 <- ids[i2]
t3 <- ids[-i3]
v3 <- ids[i3]
t4 <- ids[-i4]
v4 <- ids[i4]
v5 <- ids[i5]
t5 <- ids[-i5]
t6 <- ids[-i6]
v6 <- ids[i6]
t7 <- ids[-i7]
v7 <- ids[i7]
t8 <- ids[-i8]
v8 <- ids[i8]
t9 <- ids[-i9]
v9 <- ids[i9]
t10 <- ids[-i10]
v10 <- ids[i10]
train1 <- train.white[t1,] # first training data set
val1 <- train.white[v1,] # first validation/test data set
train2 <- train.white[t2,] # second training data set
val2 <- train.white[v2,] # second validation/test data set
train3 <- train.white[t3,] # third training data set
val3 <- train.white[v3,] # third validation/test data set
train4 <- train.white[t4,] # fourth training data set
val4 <- train.white[v4,] # fourth validation/test data set
train5 <- train.white[t5,] # fifth training data set
val5 <- train.white[v5,] # fifth validation/test data set
train6 <- train.white[t6,] # sixth training data set
val6 <- train.white[v6,] # sixth validation/test data set
train7 <- train.white[t7,] # seventh training data set
val7 <- train.white[v7,] # seventh validation/test data set
train8 <- train.white[t8,] # eighth training data set
val8 <- train.white[v8,] # eighth validation/test data set
train9 <- train.white[t9,] # ninth training data set
val9 <- train.white[v9,] # ninth validation/test data set
train10 <- train.white[t10,] # tenth training data set
val10 <- train.white[v10,] # tenth validation/test data set
nrow(val1)
#val1
# 1st fold/training set
plot(train1$quality.good, train1$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train1')
plot(train1$quality.good, train1$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train1')
plot(train1$quality.good, train1$citric.acid, xlab = 'quality', ylab = 'citric.acid train1')
plot(train1$quality.good, train1$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train1')
plot(train1$quality.good, train1$chlorides, xlab = 'quality', ylab = 'chlorides train1')
plot(train1$quality.good, train1$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train1')
plot(train1$quality.good, train1$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train1')
plot(train1$quality.good, train1$density, xlab = 'quality', ylab = 'density train1')
plot(train1$quality.good, train1$pH, xlab = 'quality', ylab = 'pH train1')
plot(train1$quality.good, train1$sulphates, xlab = 'quality', ylab = 'sulphates train1')
plot(train1$quality.good, train1$alcohol, xlab = 'quality', ylab = 'alcohol train1')
# 2nd fold/training set
plot(train2$quality.good, train2$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train2')
plot(train2$quality.good, train2$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train2')
plot(train2$quality.good, train1$citric.acid, xlab = 'quality', ylab = 'citric.acid train2')
plot(train2$quality.good, train1$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train2')
plot(train2$quality.good, train1$chlorides, xlab = 'quality', ylab = 'chlorides train2')
plot(train2$quality.good, train1$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train2')
plot(train2$quality.good, train1$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train2')
plot(train2$quality.good, train1$density, xlab = 'quality', ylab = 'density train2')
plot(train2$quality.good, train1$pH, xlab = 'quality', ylab = 'pH train2')
plot(train2$quality.good, train1$sulphates, xlab = 'quality', ylab = 'sulphates train2')
plot(train2$quality.good, train1$alcohol, xlab = 'quality', ylab = 'alcohol train2')
# 3rd fold/training set
plot(train3$quality.good, train3$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train3')
plot(train3$quality.good, train3$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train3')
plot(train3$quality.good, train3$citric.acid, xlab = 'quality', ylab = 'citric.acid train3')
plot(train3$quality.good, train3$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train3')
plot(train3$quality.good, train3$chlorides, xlab = 'quality', ylab = 'chlorides train3')
plot(train3$quality.good, train3$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train3')
plot(train3$quality.good, train3$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train3')
plot(train3$quality.good, train3$density, xlab = 'quality', ylab = 'density train3')
plot(train3$quality.good, train3$pH, xlab = 'quality', ylab = 'pH train3')
plot(train3$quality.good, train3$sulphates, xlab = 'quality', ylab = 'sulphates train3')
plot(train3$quality.good, train3$alcohol, xlab = 'quality', ylab = 'alcohol train3')
# 4th fold/training set
plot(train4$quality.good, train4$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train4')
plot(train4$quality.good, train4$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train4')
plot(train4$quality.good, train4$citric.acid, xlab = 'quality', ylab = 'citric.acid train4')
plot(train4$quality.good, train4$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train4')
plot(train4$quality.good, train4$chlorides, xlab = 'quality', ylab = 'chlorides train4')
plot(train4$quality.good, train4$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train4')
plot(train4$quality.good, train4$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train4')
plot(train4$quality.good, train4$density, xlab = 'quality', ylab = 'density train4')
plot(train4$quality.good, train4$pH, xlab = 'quality', ylab = 'pH train4')
plot(train4$quality.good, train4$sulphates, xlab = 'quality', ylab = 'sulphates train4')
plot(train4$quality.good, train4$alcohol, xlab = 'quality', ylab = 'alcohol train4')
# 5th fold/training set
plot(train5$quality.good, train5$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train5')
plot(train5$quality.good, train5$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train5')
plot(train5$quality.good, train5$citric.acid, xlab = 'quality', ylab = 'citric.acid train5')
plot(train5$quality.good, train5$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train5')
plot(train5$quality.good, train5$chlorides, xlab = 'quality', ylab = 'chlorides train5')
plot(train5$quality.good, train5$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train5')
plot(train5$quality.good, train5$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train5')
plot(train5$quality.good, train5$density, xlab = 'quality', ylab = 'density train5')
plot(train5$quality.good, train5$pH, xlab = 'quality', ylab = 'pH train5')
plot(train5$quality.good, train5$sulphates, xlab = 'quality', ylab = 'sulphates train5')
plot(train5$quality.good, train5$alcohol, xlab = 'quality', ylab = 'alcohol train5')
# 6th fold/training set
plot(train6$quality.good, train6$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train6')
plot(train6$quality.good, train6$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train6')
plot(train6$quality.good, train6$citric.acid, xlab = 'quality', ylab = 'citric.acid train6')
plot(train6$quality.good, train6$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train6')
plot(train6$quality.good, train6$chlorides, xlab = 'quality', ylab = 'chlorides train6')
plot(train6$quality.good, train6$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train6')
plot(train6$quality.good, train6$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train6')
plot(train6$quality.good, train6$density, xlab = 'quality', ylab = 'density train6')
plot(train6$quality.good, train6$pH, xlab = 'quality', ylab = 'pH train6')
plot(train6$quality.good, train6$sulphates, xlab = 'quality', ylab = 'sulphates train6')
plot(train6$quality.good, train6$alcohol, xlab = 'quality', ylab = 'alcohol train6')
# 7th fold/training set
plot(train7$quality.good, train7$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train7')
plot(train7$quality.good, train7$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train7')
plot(train7$quality.good, train7$citric.acid, xlab = 'quality', ylab = 'citric.acid train7')
plot(train7$quality.good, train7$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train7')
plot(train7$quality.good, train7$chlorides, xlab = 'quality', ylab = 'chlorides train7')
plot(train7$quality.good, train7$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train7')
plot(train7$quality.good, train7$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train7')
plot(train7$quality.good, train7$density, xlab = 'quality', ylab = 'density train7')
plot(train7$quality.good, train7$pH, xlab = 'quality', ylab = 'pH train7')
plot(train7$quality.good, train7$sulphates, xlab = 'quality', ylab = 'sulphates train7')
plot(train7$quality.good, train7$alcohol, xlab = 'quality', ylab = 'alcohol train7')
# 8th fold/training set
plot(train8$quality.good, train8$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train8')
plot(train8$quality.good, train8$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train8')
plot(train8$quality.good, train8$citric.acid, xlab = 'quality', ylab = 'citric.acid train8')
plot(train8$quality.good, train8$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train8')
plot(train8$quality.good, train8$chlorides, xlab = 'quality', ylab = 'chlorides train8')
plot(train8$quality.good, train8$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train8')
plot(train8$quality.good, train8$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train8')
plot(train8$quality.good, train8$density, xlab = 'quality', ylab = 'density train8')
plot(train8$quality.good, train8$pH, xlab = 'quality', ylab = 'pH train8')
plot(train8$quality.good, train8$sulphates, xlab = 'quality', ylab = 'sulphates train8')
plot(train8$quality.good, train8$alcohol, xlab = 'quality', ylab = 'alcohol train8')
# 9th fold/training set
plot(train9$quality.good, train9$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train9')
plot(train9$quality.good, train9$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train9')
plot(train9$quality.good, train9$citric.acid, xlab = 'quality', ylab = 'citric.acid train9')
plot(train9$quality.good, train9$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train9')
plot(train9$quality.good, train9$chlorides, xlab = 'quality', ylab = 'chlorides train9')
plot(train9$quality.good, train9$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train9')
plot(train9$quality.good, train9$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train9')
plot(train9$quality.good, train9$density, xlab = 'quality', ylab = 'density train9')
plot(train9$quality.good, train9$pH, xlab = 'quality', ylab = 'pH train9')
plot(train9$quality.good, train9$sulphates, xlab = 'quality', ylab = 'sulphates train9')
plot(train9$quality.good, train9$alcohol, xlab = 'quality', ylab = 'alcohol train9')
# 10th fold/training set
plot(train10$quality.good, train10$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train10')
plot(train10$quality.good, train10$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train10')
plot(train10$quality.good, train10$citric.acid, xlab = 'quality', ylab = 'citric.acid train10')
plot(train10$quality.good, train10$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train10')
plot(train10$quality.good, train10$chlorides, xlab = 'quality', ylab = 'chlorides train10')
plot(train10$quality.good, train10$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train10')
plot(train10$quality.good, train10$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train10')
plot(train10$quality.good, train10$density, xlab = 'quality', ylab = 'density train10')
plot(train10$quality.good, train10$pH, xlab = 'quality', ylab = 'pH train10')
plot(train10$quality.good, train10$sulphates, xlab = 'quality', ylab = 'sulphates train10')
plot(train10$quality.good, train10$alcohol, xlab = 'quality', ylab = 'alcohol train10')
# # 1st fold/training set
# plot(train1$quality.good, train1$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train1')
# plot(train1$quality.good, train1$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train1')
# plot(train1$quality.good, train1$citric.acid, xlab = 'quality', ylab = 'citric.acid train1')
# plot(train1$quality.good, train1$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train1')
# plot(train1$quality.good, train1$chlorides, xlab = 'quality', ylab = 'chlorides train1')
# plot(train1$quality.good, train1$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train1')
# plot(train1$quality.good, train1$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train1')
# plot(train1$quality.good, train1$density, xlab = 'quality', ylab = 'density train1')
# plot(train1$quality.good, train1$pH, xlab = 'quality', ylab = 'pH train1')
# plot(train1$quality.good, train1$sulphates, xlab = 'quality', ylab = 'sulphates train1')
# plot(train1$quality.good, train1$alcohol, xlab = 'quality', ylab = 'alcohol train1')
#
# # 2nd fold/training set
# plot(train2$quality.good, train2$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train2')
# plot(train2$quality.good, train2$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train2')
# plot(train2$quality.good, train1$citric.acid, xlab = 'quality', ylab = 'citric.acid train2')
# plot(train2$quality.good, train1$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train2')
# plot(train2$quality.good, train1$chlorides, xlab = 'quality', ylab = 'chlorides train2')
# plot(train2$quality.good, train1$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train2')
# plot(train2$quality.good, train1$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train2')
# plot(train2$quality.good, train1$density, xlab = 'quality', ylab = 'density train2')
# plot(train2$quality.good, train1$pH, xlab = 'quality', ylab = 'pH train2')
# plot(train2$quality.good, train1$sulphates, xlab = 'quality', ylab = 'sulphates train2')
# plot(train2$quality.good, train1$alcohol, xlab = 'quality', ylab = 'alcohol train2')
#
# # 3rd fold/training set
# plot(train3$quality.good, train3$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train3')
# plot(train3$quality.good, train3$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train3')
# plot(train3$quality.good, train3$citric.acid, xlab = 'quality', ylab = 'citric.acid train3')
# plot(train3$quality.good, train3$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train3')
# plot(train3$quality.good, train3$chlorides, xlab = 'quality', ylab = 'chlorides train3')
# plot(train3$quality.good, train3$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train3')
# plot(train3$quality.good, train3$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train3')
# plot(train3$quality.good, train3$density, xlab = 'quality', ylab = 'density train3')
# plot(train3$quality.good, train3$pH, xlab = 'quality', ylab = 'pH train3')
# plot(train3$quality.good, train3$sulphates, xlab = 'quality', ylab = 'sulphates train3')
# plot(train3$quality.good, train3$alcohol, xlab = 'quality', ylab = 'alcohol train3')
#
# # 4th fold/training set
# plot(train4$quality.good, train4$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train4')
# plot(train4$quality.good, train4$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train4')
# plot(train4$quality.good, train4$citric.acid, xlab = 'quality', ylab = 'citric.acid train4')
# plot(train4$quality.good, train4$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train4')
# plot(train4$quality.good, train4$chlorides, xlab = 'quality', ylab = 'chlorides train4')
# plot(train4$quality.good, train4$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train4')
# plot(train4$quality.good, train4$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train4')
# plot(train4$quality.good, train4$density, xlab = 'quality', ylab = 'density train4')
# plot(train4$quality.good, train4$pH, xlab = 'quality', ylab = 'pH train4')
# plot(train4$quality.good, train4$sulphates, xlab = 'quality', ylab = 'sulphates train4')
# plot(train4$quality.good, train4$alcohol, xlab = 'quality', ylab = 'alcohol train4')
#
# # 5th fold/training set
# plot(train5$quality.good, train5$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train5')
# plot(train5$quality.good, train5$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train5')
# plot(train5$quality.good, train5$citric.acid, xlab = 'quality', ylab = 'citric.acid train5')
# plot(train5$quality.good, train5$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train5')
# plot(train5$quality.good, train5$chlorides, xlab = 'quality', ylab = 'chlorides train5')
# plot(train5$quality.good, train5$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train5')
# plot(train5$quality.good, train5$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train5')
# plot(train5$quality.good, train5$density, xlab = 'quality', ylab = 'density train5')
# plot(train5$quality.good, train5$pH, xlab = 'quality', ylab = 'pH train5')
# plot(train5$quality.good, train5$sulphates, xlab = 'quality', ylab = 'sulphates train5')
# plot(train5$quality.good, train5$alcohol, xlab = 'quality', ylab = 'alcohol train5')
#
# # 6th fold/training set
# plot(train6$quality.good, train6$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train6')
# plot(train6$quality.good, train6$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train6')
# plot(train6$quality.good, train6$citric.acid, xlab = 'quality', ylab = 'citric.acid train6')
# plot(train6$quality.good, train6$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train6')
# plot(train6$quality.good, train6$chlorides, xlab = 'quality', ylab = 'chlorides train6')
# plot(train6$quality.good, train6$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train6')
# plot(train6$quality.good, train6$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train6')
# plot(train6$quality.good, train6$density, xlab = 'quality', ylab = 'density train6')
# plot(train6$quality.good, train6$pH, xlab = 'quality', ylab = 'pH train6')
# plot(train6$quality.good, train6$sulphates, xlab = 'quality', ylab = 'sulphates train6')
# plot(train6$quality.good, train6$alcohol, xlab = 'quality', ylab = 'alcohol train6')
#
# # 7th fold/training set
# plot(train7$quality.good, train7$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train7')
# plot(train7$quality.good, train7$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train7')
# plot(train7$quality.good, train7$citric.acid, xlab = 'quality', ylab = 'citric.acid train7')
# plot(train7$quality.good, train7$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train7')
# plot(train7$quality.good, train7$chlorides, xlab = 'quality', ylab = 'chlorides train7')
# plot(train7$quality.good, train7$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train7')
# plot(train7$quality.good, train7$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train7')
# plot(train7$quality.good, train7$density, xlab = 'quality', ylab = 'density train7')
# plot(train7$quality.good, train7$pH, xlab = 'quality', ylab = 'pH train7')
# plot(train7$quality.good, train7$sulphates, xlab = 'quality', ylab = 'sulphates train7')
# plot(train7$quality.good, train7$alcohol, xlab = 'quality', ylab = 'alcohol train7')
#
# # 8th fold/training set
# plot(train8$quality.good, train8$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train8')
# plot(train8$quality.good, train8$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train8')
# plot(train8$quality.good, train8$citric.acid, xlab = 'quality', ylab = 'citric.acid train8')
# plot(train8$quality.good, train8$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train8')
# plot(train8$quality.good, train8$chlorides, xlab = 'quality', ylab = 'chlorides train8')
# plot(train8$quality.good, train8$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train8')
# plot(train8$quality.good, train8$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train8')
# plot(train8$quality.good, train8$density, xlab = 'quality', ylab = 'density train8')
# plot(train8$quality.good, train8$pH, xlab = 'quality', ylab = 'pH train8')
# plot(train8$quality.good, train8$sulphates, xlab = 'quality', ylab = 'sulphates train8')
# plot(train8$quality.good, train8$alcohol, xlab = 'quality', ylab = 'alcohol train8')
#
# # 9th fold/training set
# plot(train9$quality.good, train9$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train9')
# plot(train9$quality.good, train9$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train9')
# plot(train9$quality.good, train9$citric.acid, xlab = 'quality', ylab = 'citric.acid train9')
# plot(train9$quality.good, train9$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train9')
# plot(train9$quality.good, train9$chlorides, xlab = 'quality', ylab = 'chlorides train9')
# plot(train9$quality.good, train9$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train9')
# plot(train9$quality.good, train9$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train9')
# plot(train9$quality.good, train9$density, xlab = 'quality', ylab = 'density train9')
# plot(train9$quality.good, train9$pH, xlab = 'quality', ylab = 'pH train9')
# plot(train9$quality.good, train9$sulphates, xlab = 'quality', ylab = 'sulphates train9')
# plot(train9$quality.good, train9$alcohol, xlab = 'quality', ylab = 'alcohol train9')
#
# # 10th fold/training set
# plot(train10$quality.good, train10$fixed.acidity, xlab = 'quality', ylab = 'fixed.acidity train10')
# plot(train10$quality.good, train10$volatile.acidity, xlab = 'quality', ylab = 'volatile.acidity train10')
# plot(train10$quality.good, train10$citric.acid, xlab = 'quality', ylab = 'citric.acid train10')
# plot(train10$quality.good, train10$residual.sugar, xlab = 'quality', ylab = 'residual.sugar train10')
# plot(train10$quality.good, train10$chlorides, xlab = 'quality', ylab = 'chlorides train10')
# plot(train10$quality.good, train10$free.sulfur.dioxide, xlab = 'quality', ylab = 'free.sulfur.dioxide train10')
# plot(train10$quality.good, train10$total.sulfur.dioxide, xlab = 'quality', ylab = 'total.sulfur.dioxide train10')
# plot(train10$quality.good, train10$density, xlab = 'quality', ylab = 'density train10')
# plot(train10$quality.good, train10$pH, xlab = 'quality', ylab = 'pH train10')
# plot(train10$quality.good, train10$sulphates, xlab = 'quality', ylab = 'sulphates train10')
# plot(train10$quality.good, train10$alcohol, xlab = 'quality', ylab = 'alcohol train10')
# error rate of lda model for 1st train/val set
lda.fit1 <- lda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train1)
lda.yhat1 <- predict(lda.fit1,val1)
lda.error.rate1 <- sum(lda.yhat1$class!=val1$quality.good)/dim(val1)[1]
#lda.error.rate1
# error rate of lda model for 2nd train/val set
lda.fit2 <- lda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train2)
lda.yhat2 <- predict(lda.fit2,val2)
lda.error.rate2 <- sum(lda.yhat2$class!=val2$quality.good)/dim(val2)[1]
#lda.error.rate2
# error rate of lda model for 3rd train/val set
lda.fit3 <- lda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train3)
lda.yhat3 <- predict(lda.fit3,val3)
lda.error.rate3 <- sum(lda.yhat3$class!=val3$quality.good)/dim(val3)[1]
#lda.error.rate3
# error rate of lda model for 4th train/val set
lda.fit4 <- lda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train4)
lda.yhat4 <- predict(lda.fit4,val4)
lda.error.rate4 <- sum(lda.yhat4$class!=val4$quality.good)/dim(val4)[1]
#lda.error.rate4
# error rate of lda model for 5th train/val set
lda.fit5 <- lda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train5)
lda.yhat5 <- predict(lda.fit5,val5)
lda.error.rate5 <- sum(lda.yhat5$class!=val5$quality.good)/dim(val5)[1]
#lda.error.rate5
# error rate of lda model for 6th train/val set
lda.fit6 <- lda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train6)
lda.yhat6 <- predict(lda.fit6,val6)
lda.error.rate6 <- sum(lda.yhat6$class!=val6$quality.good)/dim(val6)[1]
#lda.error.rate6
# error rate of lda model for 7th train/val set
lda.fit7 <- lda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train7)
lda.yhat7 <- predict(lda.fit7,val7)
lda.error.rate7 <- sum(lda.yhat7$class!=val7$quality.good)/dim(val7)[1]
#lda.error.rate7
# error rate of lda model for 8th train/val set
lda.fit8 <- lda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train8)
lda.yhat8 <- predict(lda.fit8,val8)
lda.error.rate8 <- sum(lda.yhat8$class!=val8$quality.good)/dim(val8)[1]
#lda.error.rate8
# error rate of lda model for 9th train/val set
lda.fit9 <- lda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train9)
lda.yhat9 <- predict(lda.fit9,val9)
lda.error.rate9 <- sum(lda.yhat9$class!=val9$quality.good)/dim(val9)[1]
#lda.error.rate9
# error rate of lda model for 10th train/val set
lda.fit10 <- lda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train10)
lda.yhat10 <- predict(lda.fit10,val10)
lda.error.rate10 <- sum(lda.yhat10$class!=val10$quality.good)/dim(val10)[1]
#lda.error.rate10
# overall lda train error rate
lda.error.rate.overall <- (lda.error.rate1 + lda.error.rate2 + lda.error.rate3 + lda.error.rate4 + lda.error.rate5 + lda.error.rate6 + lda.error.rate7 + lda.error.rate8 + lda.error.rate9 + lda.error.rate10)/10
lda.error.rate.overall
# test error rate of lda model for full test set
lda.fit.final <- lda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train.white)
lda.yhat.final <- predict(lda.fit.final,test.white)
lda.error.rate.final <- sum(lda.yhat.final$class!=test.white$quality.good)/dim(test.white)[1]
lda.error.rate.final
# error rate of qda model for 1st train/val set
qda.fit1 <- qda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train1)
qda.yhat1 <- predict(qda.fit1,val1)
qda.error.rate1 <- sum(qda.yhat1$class!=val1$quality.good)/dim(val1)[1]
#qda.error.rate1
# error rate of qda model for 2nd train/val set
qda.fit2 <- qda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train2)
qda.yhat2 <- predict(qda.fit2,val2)
qda.error.rate2 <- sum(qda.yhat2$class!=val2$quality.good)/dim(val2)[1]
#qda.error.rate2
# error rate of qda model for 3rd train/val set
qda.fit3 <- qda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train3)
qda.yhat3 <- predict(qda.fit3,val3)
qda.error.rate3 <- sum(qda.yhat3$class!=val3$quality.good)/dim(val3)[1]
#qda.error.rate3
# error rate of qda model for 4th train/val set
qda.fit4 <- qda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train4)
qda.yhat4 <- predict(qda.fit4,val4)
qda.error.rate4 <- sum(qda.yhat4$class!=val4$quality.good)/dim(val4)[1]
#qda.error.rate4
# error rate of qda model for 5th train/val set
qda.fit5 <- qda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train5)
qda.yhat5 <- predict(qda.fit5,val5)
qda.error.rate5 <- sum(qda.yhat5$class!=val5$quality.good)/dim(val5)[1]
#qda.error.rate5
# error rate of qda model for 6th train/val set
qda.fit6 <- qda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train6)
qda.yhat6 <- predict(qda.fit6,val6)
qda.error.rate6 <- sum(qda.yhat6$class!=val6$quality.good)/dim(val6)[1]
#qda.error.rate6
# error rate of qda model for 7th train/val set
qda.fit7 <- qda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train7)
qda.yhat7 <- predict(qda.fit7,val7)
qda.error.rate7 <- sum(qda.yhat7$class!=val7$quality.good)/dim(val7)[1]
#qda.error.rate7
# error rate of qda model for 8th train/val set
qda.fit8 <- qda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train8)
qda.yhat8 <- predict(qda.fit8,val8)
qda.error.rate8 <- sum(qda.yhat8$class!=val8$quality.good)/dim(val8)[1]
#qda.error.rate8
# error rate of qda model for 9th train/val set
qda.fit9 <- qda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train9)
qda.yhat9 <- predict(qda.fit9,val9)
qda.error.rate9 <- sum(qda.yhat9$class!=val9$quality.good)/dim(val9)[1]
#qda.error.rate9
# error rate of qda model for 10th train/val set
qda.fit10 <- qda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train10)
qda.yhat10 <- predict(qda.fit10,val10)
qda.error.rate10 <- sum(qda.yhat10$class!=val10$quality.good)/dim(val10)[1]
#qda.error.rate10
# overall qda train error rate
qda.error.rate.overall <- (qda.error.rate1 + qda.error.rate2 + qda.error.rate3 + qda.error.rate4 + qda.error.rate5 + qda.error.rate6 + qda.error.rate7 + qda.error.rate8 + qda.error.rate9 + qda.error.rate10)/10
qda.error.rate.overall
# test error rate of qda model for full test set
qda.fit.final <- qda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train.white)
qda.yhat.final <- predict(qda.fit.final,test.white)
qda.error.rate.final <- sum(qda.yhat.final$class!=test.white$quality.good)/dim(test.white)[1]
qda.error.rate.final
# error rate of naiveBayes model for 1st train/val set
naiveBayes.fit1 <- naiveBayes(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity,train1)
naiveBayes.yhat1 <- predict(naiveBayes.fit1,val1)
naiveBayes.error.rate1 <- sum(naiveBayes.yhat1!=val1$quality.good)/dim(val1)[1]
#naiveBayes.error.rate1
# error rate of naiveBayes model for 2nd train/val set
naiveBayes.fit2 <- naiveBayes(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity,train2)
naiveBayes.yhat2 <- predict(naiveBayes.fit2,val2)
naiveBayes.error.rate2 <- sum(naiveBayes.yhat2!=val2$quality.good)/dim(val2)[1]
#naiveBayes.error.rate2
# error rate of naiveBayes model for 3rd train/val set
naiveBayes.fit3 <- naiveBayes(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity,train3)
naiveBayes.yhat3 <- predict(naiveBayes.fit3,val3)
naiveBayes.error.rate3 <- sum(naiveBayes.yhat3!=val3$quality.good)/dim(val3)[1]
#naiveBayes.error.rate3
# error rate of naiveBayes model for 4th train/val set
naiveBayes.fit4 <- naiveBayes(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity,train4)
naiveBayes.yhat4 <- predict(naiveBayes.fit4,val4)
naiveBayes.error.rate4 <- sum(naiveBayes.yhat4!=val4$quality.good)/dim(val4)[1]
#naiveBayes.error.rate4
# error rate of naiveBayes model for 5th train/val set
naiveBayes.fit5 <- naiveBayes(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity,train5)
naiveBayes.yhat5 <- predict(naiveBayes.fit5,val5)
naiveBayes.error.rate5 <- sum(naiveBayes.yhat5!=val5$quality.good)/dim(val5)[1]
#naiveBayes.error.rate5
# error rate of naiveBayes model for 6th train/val set
naiveBayes.fit6 <- naiveBayes(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity,train6)
naiveBayes.yhat6 <- predict(naiveBayes.fit6,val6)
naiveBayes.error.rate6 <- sum(naiveBayes.yhat6!=val6$quality.good)/dim(val6)[1]
#naiveBayes.error.rate6
# error rate of naiveBayes model for 7th train/val set
naiveBayes.fit7 <- naiveBayes(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity,train7)
naiveBayes.yhat7 <- predict(naiveBayes.fit7,val7)
naiveBayes.error.rate7 <- sum(naiveBayes.yhat7!=val7$quality.good)/dim(val7)[1]
#naiveBayes.error.rate7
# error rate of naiveBayes model for 8th train/val set
naiveBayes.fit8 <- naiveBayes(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity,train8)
naiveBayes.yhat8 <- predict(naiveBayes.fit8,val8)
naiveBayes.error.rate8 <- sum(naiveBayes.yhat8!=val8$quality.good)/dim(val8)[1]
#naiveBayes.error.rate8
# error rate of naiveBayes model for 9th train/val set
naiveBayes.fit9 <- naiveBayes(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity,train9)
naiveBayes.yhat9 <- predict(naiveBayes.fit9,val9)
naiveBayes.error.rate9 <- sum(naiveBayes.yhat9!=val9$quality.good)/dim(val9)[1]
#naiveBayes.error.rate9
# error rate of naiveBayes model for 10th train/val set
naiveBayes.fit10 <- naiveBayes(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity,train10)
naiveBayes.yhat10 <- predict(naiveBayes.fit10,val10)
naiveBayes.error.rate10 <- sum(naiveBayes.yhat10!=val10$quality.good)/dim(val10)[1]
#naiveBayes.error.rate10
# overall naiveBayes train error rate
naiveBayes.error.rate.overall <- (naiveBayes.error.rate1 + naiveBayes.error.rate2 + naiveBayes.error.rate3 + naiveBayes.error.rate4 + naiveBayes.error.rate5 + naiveBayes.error.rate6 + naiveBayes.error.rate7 + naiveBayes.error.rate8 + naiveBayes.error.rate9 + naiveBayes.error.rate10)/10
naiveBayes.error.rate.overall
# test error rate of naiveBayes model for full test set
naiveBayes.fit.final <- naiveBayes(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity,train.white)
naiveBayes.yhat.final <- predict(naiveBayes.fit.final,test.white)
naiveBayes.error.rate.final <- sum(naiveBayes.yhat.final!=test.white$quality.good)/dim(test.white)[1]
naiveBayes.error.rate.final
# qda is best lets do it on the test
# test error rate of qda model for full test set
qda.fit.final <- qda(quality.good~alcohol+total.sulfur.dioxide+volatile.acidity+density,train.white)
qda.yhat.final <- predict(qda.fit.final,test.white)
qda.error.rate.final <- sum(qda.yhat.final$class!=test.white$quality.good)/dim(test.white)[1]
qda.error.rate.final
